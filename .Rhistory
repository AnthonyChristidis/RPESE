devtools::load_all()
devtools::install_github("AnthonyChristidis/glmGammaNet")
devtools::install_github("AnthonyChristidis/glmnetRcpp")
install.packages("boot")
install.packages("boot")
install.packages("sandwich")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
se.ES.exp <- ES.SE(edhec$CA, p = 1 - alpha.ES, method="historical",nsim = nboot,
se.method = c("IFcor"),
standardize = FALSE, return.coeffs = return.coeffs,
k_fold_iter = k_fold_iter,
d.GLM.EN = d.GLM.EN, clean = "none", prewhiten = FALSE,
alpha = alpha.EN, fitting.method="Exponential")
data(edhec)
colnames(edhec)=c("CA", "CTAG", "DIS", "EM",
"EMN", "ED", "FIA", "GM", "L/S",
"MA", "RV", "SS", "FoF")
se.ES.exp <- ES.SE(edhec$CA, p = 1 - alpha.ES, method="historical",nsim = nboot,
se.method = c("IFcor"),
standardize = FALSE, return.coeffs = return.coeffs,
k_fold_iter = k_fold_iter,
d.GLM.EN = d.GLM.EN, clean = "none", prewhiten = FALSE,
alpha = alpha.EN, fitting.method="Exponential")
nboot=500
return.coeffs = TRUE
d.GLM.EN = 5
alpha.ES = 0.05
alpah.EN = 0.5
seed = 12345
k_fold_iter = 1000
set.seed(seed)
#--------- Expected Shortfall estimates and their S.E.'s
se.ES.exp <- ES.SE(edhec$CA, p = 1 - alpha.ES, method="historical",nsim = nboot,
se.method = c("IFcor"),
standardize = FALSE, return.coeffs = return.coeffs,
k_fold_iter = k_fold_iter,
d.GLM.EN = d.GLM.EN, clean = "none", prewhiten = FALSE,
alpha = alpha.EN, fitting.method="Exponential")
#--------- Set parameters
nboot=500
return.coeffs = TRUE
d.GLM.EN = 5
alpha.ES = 0.05
alpah.EN = 0.5
seed = 12345
k_fold_iter = 1000
set.seed(seed)
#--------- Expected Shortfall estimates and their S.E.'s
se.ES.exp <- ES.SE(edhec$CA, p = 1 - alpha.ES, method="historical",nsim = nboot,
se.method = c("IFcor"),
standardize = FALSE, return.coeffs = return.coeffs,
k_fold_iter = k_fold_iter,
d.GLM.EN = d.GLM.EN, clean = "none", prewhiten = FALSE,
alpha = alpha.EN, fitting.method="Exponential")
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
#--------- Expected Shortfall estimates and their S.E.'s
se.ES.exp <- ES.SE(edhec$CA, p = 1 - alpha.ES, method="historical",nsim = nboot,
se.method = c("IFcor"),
standardize = FALSE, return.coeffs = return.coeffs,
k_fold_iter = k_fold_iter,
d.GLM.EN = d.GLM.EN, clean = "none", prewhiten = FALSE,
alpha = alpha.EN, fitting.method="Exponential")
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
se.SR
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
se.SR
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
se.SD
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Exponential")
StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
devtools::load_all()
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
#--------- Load data
data(edhec)
colnames(edhec)=c("CA", "CTAG", "DIS", "EM",
"EMN", "ED", "FIA", "GM", "L/S",
"MA", "RV", "SS", "FoF")
#--------- Set parameters
nboot=500
return.coeffs = TRUE
d.GLM.EN = 5
alpha.ES = 0.05
alpah.EN = 0.5
seed = 12345
k_fold_iter = 1000
set.seed(seed)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma")
se.SR
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma", prewhiten=TRUE)
se.SR
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma", prewhiten=TRUE, cleanOutliers=TRUE)
devtools::load_all()
devtools::load_all()
SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma", prewhiten=TRUE, cleanOutliers=TRUE)
SharpeRatio.SE(edhec$CA, Rf = 0, p = 0.95, FUN="StdDev", nsim=nboot,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize = FALSE,
fitting.method="Gamma", prewhiten=TRUE, cleanOutliers=F)
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::install()
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Gamma", prewhiten=FALSE, cleanOutliers=FALSE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf=0, p=0.95, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Gamma", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
devtools::load_all()
#--------- Set parameters
nboot=500
seed = 1
k_fold_iter = 1000
set.seed(seed)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, Rf=0, p=0.95, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
nboot=500
return.coeffs = TRUE
d.GLM.EN = 5
alpha.ES = 0.05
alpah.EN = 0.5
seed = 12345
k_fold_iter = 1000
set.seed(seed)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- Expected Shortfall estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor","BOOTiid","BOOTcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD.clean.prewhiten <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD.clean.prewhiten
se.SD
se.SR
se.SR.clean.prewhiten
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD
se.SD.clean.prewhiten <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD.clean.prewhiten
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR
se.SR.clean.prewhiten
library(RPESE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
#--------- Load data
data(edhec)
colnames(edhec)=c("CA", "CTAG", "DIS", "EM",
"EMN", "ED", "FIA", "GM", "L/S",
"MA", "RV", "SS", "FoF")
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
library(PerformanceAnalytics)
SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
devtools::load_all()
devtools::install()
library(RPESE)
#--------- Load data
data(edhec)
colnames(edhec)=c("CA", "CTAG", "DIS", "EM",
"EMN", "ED", "FIA", "GM", "L/S",
"MA", "RV", "SS", "FoF")
#--------- SD estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD
se.SD.clean.prewhiten <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD.clean.prewhiten
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
FUN="StdDev"
PerformanceAnalytics::FUN
devtools::install_github("hadley/devtools")
devtools::install()
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
library(RPESE)
#--------- SD estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
devtools::install()
library(RPESE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR.clean.prewhiten
devtools::install()
library(RPESE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR.clean.prewhiten
devtools::load_all()
data(edhec)
head(edhec)
colnames(edhec) = c("CA", "CTAG", "DIS", "EM","EMN", "ED", "FIA",
"GM", "LS", "MA", "RV", "SS", "FoF")
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[2])
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0.05)
mean(edhec$CA)
mean(edhec$CTAG)
mean(edhec$FIA)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE, cleanOutliers=TRUE)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
SSD.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
