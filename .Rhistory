weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
library(PerformanceAnalytics)
SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
devtools::load_all()
devtools::install()
library(RPESE)
#--------- Load data
data(edhec)
colnames(edhec)=c("CA", "CTAG", "DIS", "EM",
"EMN", "ED", "FIA", "GM", "L/S",
"MA", "RV", "SS", "FoF")
#--------- SD estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD
se.SD.clean.prewhiten <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SD.clean.prewhiten
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
FUN="StdDev"
PerformanceAnalytics::FUN
devtools::install_github("hadley/devtools")
devtools::install()
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
library(RPESE)
#--------- SD estimates and their S.E.'s
se.SD <- StdDev.SE(edhec$CA, nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
devtools::install()
library(RPESE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR.clean.prewhiten
devtools::install()
library(RPESE)
#--------- SR estimates and their S.E.'s
se.SR <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=FALSE, cleanOutliers=FALSE)
se.SR
se.SR.clean.prewhiten <- SharpeRatio.SE(edhec$CA, Rf=0, p=0.95, FUN="StdDev", nsim=nboot,
se.method=c("IFiid","IFcor"),
weights=NULL, annualize=FALSE,
fitting.method="Exponential", prewhiten=TRUE, cleanOutliers=TRUE)
se.SR.clean.prewhiten
devtools::load_all()
data(edhec)
head(edhec)
colnames(edhec) = c("CA", "CTAG", "DIS", "EM","EMN", "ED", "FIA",
"GM", "LS", "MA", "RV", "SS", "FoF")
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
devtools::load_all()
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1])
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[2])
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0.05)
mean(edhec$CA)
mean(edhec$CTAG)
mean(edhec$FIA)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE, cleanOutliers=TRUE)
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
SSD.SE(edhec$CA, weights=NULL,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
devtools::load_all()
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
data(edhec)
head(edhec)
colnames(edhec) = c("CA", "CTAG", "DIS", "EM","EMN", "ED", "FIA",
"GM", "LS", "MA", "RV", "SS", "FoF")
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Gamma")
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
arima(x=edhec$CA, order=c(ar.prewhiten.order,0,0), include.mean=TRUE)
arima(x=edhec$CA, order=c(1,0,0), include.mean=TRUE)
arima(x=edhec$CA, order=c(1,0,0), include.mean=TRUE)[[1]]
arima(x=edhec$CA, order=c(1,0,0), include.mean=TRUE)[[1]][1]
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
ar1.param <- arima(x=edhec, order=c(1,0,0), include.mean=TRUE)[[1]][1]
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
ncol(edhec$CA)
ncol(rnorm(100))
ar1.param <- arima(x=edhec, order=c(1,0,0), include.mean=TRUE)[[1]][1]
ar1.param <- arima(x=edhec$CA, order=c(1,0,0), include.mean=TRUE)[[1]][1]
arima(x=edhec$CA, order=c(1,0,0), include.mean=TRUE)[[1]][1]
arima(x=edhec$CTAG, order=c(1,0,0), include.mean=TRUE)[[1]][1]
arima(x=edhec$FIA, order=c(1,0,0), include.mean=TRUE)[[1]][1]
arima(x=edhec$DIS, order=c(1,0,0), include.mean=TRUE)[[1]][1]
arima(x=edhec$EM, order=c(1,0,0), include.mean=TRUE)[[1]][1]
test <-SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
test$IFiid
test$IFiid[1]
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
Adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
adaptive=F,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
adaptive=FALSE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=TRUE,
adaptive=FALSE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SSD.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2],
prewhiten=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=T,
adaptive=F,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=F,
cleanOutliers=TRUE,
fitting.method="Exponential")
is.vector(edhec$CA)
ncol(edhec$CA)
ncol(rnorm(100))
ncol(edhec)
is.vector(edhec)
is.vector(as.numeric(edhec))
ncol(edhec)
ncol(rnorm(100))>1
sum(ncol(rnorm(100))>1)
sum(ncol(rnorm(100))>1)==0
sum(ncol(edhec)>1)==0
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
sum(ncol(edhec$CA)>1)==0
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
PerformanceAnalytics::checkData
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
edhec
edhec[,1]
ncol(edhec)
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
colnames(edhec)
colnames(edhec) <- NULL
colnames(edhec)
test.data = cbind(rnorm(10), rnorm(10))
colnames(test.data)
colnames(edhec) = c("CA", "CTAG", "DIS", "EM","EMN", "ED", "FIA",
"GM", "LS", "MA", "RV", "SS", "FoF")
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
test
test$IFcor
dim(test$IFcor)
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
names(1:10)
names(1:10) = 1:10
names(1:10) = rep("lol", 10)
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
test <-SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
test
test$IFcor
colnames(edhec)
names(test$IFcor) = colnames(edhec)
devtools::load_all()
SortinoRatio.SE(edhec,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::load_all()
SortinoRatio.SE(edhec$CA,
se.method = c("IFiid","IFcor","BOOTiid","BOOTcor")[1:2], MAR = 0,
threshold = c("mean", "const")[1],
prewhiten=FALSE,
adaptive=TRUE,
cleanOutliers=TRUE,
fitting.method="Exponential")
devtools::install()
devtools::install()
devtools::load_all()
devtools::load_all()
is.na(test2)
is.null(test2)
exists(test2)
if(exists(test2)) print("yes") else print("no")
devtools::load_all()
devtools::install()
